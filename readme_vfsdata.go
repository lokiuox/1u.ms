// Code generated by vfsgen; DO NOT EDIT.

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Readme statically implements the virtual filesystem provided to vfsgen.
var Readme = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2025, 5, 31, 14, 46, 22, 748652997, time.UTC),
		},
		"/index.html": &vfsgen۰CompressedFileInfo{
			name:             "index.html",
			modTime:          time.Date(2025, 5, 31, 14, 46, 22, 996658871, time.UTC),
			uncompressedSize: 8487,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xc4\x5a\xdd\x72\xdb\xb8\x92\xbe\xe7\x53\xf4\xaa\xb6\x26\x71\x8d\x45\x5a\x92\xed\x49\x1c\x59\x73\x3c\xf6\x64\xa3\x5a\x27\xf1\x8c\x95\x93\x64\x6f\xb6\x20\xb2\x49\x22\x06\x01\x06\x00\x25\xd1\x57\xfb\x10\xfb\x84\xfb\x24\x5b\x0d\x90\xd4\x8f\xe5\xac\xbd\x67\xaa\xce\xc5\x8c\x45\x10\x3f\xdd\x8d\xee\xaf\xbf\x6e\x66\xfc\x2f\x57\x1f\x2f\x67\x5f\x6f\x7e\x87\xdc\x16\x02\x6e\x3e\xfd\x76\x3d\xbd\x84\x5e\x3f\x8a\x3e\x8f\x2e\xa3\xe8\x6a\x76\x05\x5f\xde\xcd\xde\x5f\xc3\x20\x3c\x82\x99\x66\xd2\x70\xcb\x95\x64\x22\x8a\x7e\xff\xd0\x83\x5e\x6e\x6d\x79\x16\x45\xcb\xe5\x32\x5c\x8e\x42\xa5\xb3\x68\xf6\x67\xb4\xa2\xbd\x06\xb4\xb8\xf9\xd9\xb7\x1b\x2b\xc3\xc4\x26\xbd\x49\x30\x76\x07\xae\x0a\x21\xcd\xf9\x9e\x6d\x06\xaf\x5f\xbf\xf6\xab\xdd\x5c\x64\xc9\x24\x00\x18\x17\x68\x19\xd0\xec\x3e\x7e\xaf\xf8\xe2\xbc\x77\xa9\xa4\x45\x69\xfb\xb3\xba\xc4\x1e\xc4\xfe\xe9\xbc\x67\x71\x65\x23\x5a\xfd\x06\xe2\x9c\x69\x83\xf6\xbc\xb2\x69\xff\x55\x0f\xa2\x1f\xef\x73\x6b\x6b\x81\x7b\x77\x8b\x8d\xd9\x5a\x2d\x59\x81\xe7\xbd\x0c\x25\x6a\x66\x95\xde\x98\x5e\x32\x99\xa8\xb8\x9d\x6c\xb9\x15\x38\x19\x54\x61\x61\xc6\x91\x7f\xa0\x61\xc1\xe5\x1d\x68\x14\xe7\x3d\x43\x47\x9a\x1c\xd1\xf6\x20\xd7\x98\x7a\x73\x98\xb3\x28\x8a\x13\xf9\xcd\x84\xb1\x50\x55\x92\x0a\xa6\x31\x8c\x55\x11\xb1\x6f\x6c\x15\x09\x3e\x37\x51\xc6\x6d\x5e\xcd\xfb\x05\xd3\x77\x89\x5a\xca\x7e\x6c\x4c\x34\x0a\x8f\xc2\xc1\xee\x9b\xb0\xe0\x32\x74\xf2\xdb\xba\xc4\x87\xfa\x98\x58\xf3\xd2\x82\xd1\xf1\x93\xcf\xce\x79\x96\x0b\x9e\xe5\x36\xfc\x66\xa2\xd7\xe1\xe0\x24\x1c\x1c\x6d\x0c\xd2\x81\xdf\x4c\x0f\xb8\xb4\x98\x69\x6e\xeb\xf3\x9e\xc9\xd9\xf0\xe4\xb4\x3f\xb8\xaf\x7e\x1e\xfd\x26\xaf\xbf\xfe\xfd\xf5\x75\xc2\xbf\xbe\x3a\xa9\xbe\xbc\xbf\xe7\x7c\x34\x4f\xf4\x1d\x8a\xba\x1c\xfd\x82\x47\xff\x51\xcf\x2e\xfe\xc8\x8f\xce\x7b\x10\x6b\x65\x8c\xd2\x3c\xe3\xf2\xbc\xc7\xa4\x92\x75\xa1\x2a\xd3\x9b\x8c\x23\x2f\xf3\x5f\x2a\xbe\x60\x32\xab\x58\x86\x26\x32\x39\x0a\xf1\x03\x25\xe4\xf2\xe3\xfb\xd1\xea\xf7\xf8\xf4\xf2\x6d\xaa\x6f\x3e\x5c\x7d\x18\x54\xe5\x97\x9f\x4f\x6a\xf9\xed\xf3\xbf\x5f\x7c\x31\xd9\xcf\xf3\xcf\xa7\xa3\xdb\xdb\x7b\x8b\x4f\x53\xe2\xaf\xf0\x86\xbd\x2a\xf9\xdd\xa2\x04\x53\x56\x09\xbb\xf6\x83\x87\x2a\xdd\xc7\x95\xfc\x7e\x2b\x07\x42\x64\x17\x57\x6c\x7a\xf3\xb6\xbe\xd7\x7f\xbc\xfa\x74\x3b\xfd\xf6\x65\xf8\xf7\xb2\x5a\xbd\xbb\xff\xb4\xfc\xca\xcd\xc7\xa5\x7a\xf5\xb8\x4a\x5b\xfe\x34\xc9\xc5\x37\x13\x72\xc9\xed\xbb\x56\x34\x2e\xb3\x8f\xf2\x5a\xb1\xe4\xe5\xc1\x9b\x0d\xed\x23\x1f\xdf\xe3\xb9\x4a\x6a\x88\x05\x33\xe6\xbc\xd7\x79\x35\x0d\x3a\x0c\x18\xb4\x41\x94\x0f\xe8\x71\x38\xf9\x9c\x33\x0b\xdc\x80\xcd\x39\x8d\x0e\x27\xc1\xb8\x9c\xcc\x72\x6e\x68\x90\x81\x29\x98\x10\x60\xd0\x82\x4a\xe1\x1e\xb5\xea\xc7\x4a\xa6\x3c\xab\x34\x23\x24\x82\xab\x0f\xb7\x50\x59\x2e\xb8\xe5\x68\x20\x55\x1a\x98\x31\xdc\x90\x90\x01\x97\x90\xa0\xc5\xd8\x4d\x64\x32\x01\x5c\x95\x42\x71\xeb\x57\xaa\x14\x6e\x6f\xff\x7c\xdb\xd7\x28\x98\xc5\x04\x16\x95\x20\x14\x98\x37\x7b\x85\x30\xb5\x41\xa9\xd5\x82\x27\x68\x00\x99\xa9\xc1\x2a\xa8\x0c\xba\x23\x35\xce\xb9\x4c\xb8\xcc\x9a\xc3\xeb\x43\x60\x06\x96\x28\x04\xfd\x65\xb0\x64\x6e\x7a\x86\x36\xd0\x68\x94\x58\xb0\xb9\x40\xa0\x9f\x95\x8e\xe9\x47\xac\x74\x62\x60\xc9\x6d\x0e\x4c\xd6\x90\xf1\x05\xca\x16\x7c\x4c\x38\x8e\xca\xc6\x0e\x08\x56\x29\x01\x89\x42\x03\x52\x59\xc0\xa2\x14\xaa\x76\x6b\xa4\x5a\xa0\x00\x8b\x71\x2e\xf9\xf7\x0a\x8d\x53\x91\xfb\x69\x95\x1b\x02\x2e\x03\x9a\x69\x50\x1a\x0c\xe1\x42\x08\x48\x91\xd9\x4a\xd3\x64\x8d\x60\x35\x5f\x70\x26\x48\x52\x5e\x94\x02\x0b\x94\xd6\xed\x12\x33\x09\x73\x24\xad\xb9\xa8\x21\x55\x95\x4c\xc8\x9a\xca\xe6\xa8\xc1\xf0\x82\x0b\xa6\x9d\x60\xdb\xa2\x1a\xd4\x0b\x1e\x23\x09\x11\x57\x5a\xa3\xb4\xa2\x06\x5d\x49\x60\x16\x6c\x8e\x30\x66\x1b\xd1\x70\x16\x45\xce\x15\xa2\x5e\xeb\x12\x6c\x12\x24\xaa\x60\x5c\xc2\x4b\xa7\x8a\x35\x2f\xc0\x54\x73\x3f\x66\x0e\x9a\xa3\xf2\xe3\xc9\xad\xb7\x62\xac\x12\x84\x9f\x58\x51\xbe\x01\x83\x22\xed\xe7\xca\xd8\x71\x94\x1f\xaf\xe5\xf1\xf3\xc8\x91\x16\x8c\x0b\x77\x07\x4a\xc2\x98\x05\xdb\x41\xe9\x91\xd6\x85\xa2\x44\x5c\x79\xb9\x7a\x13\x3f\x4c\x72\x85\xf0\x4e\x2d\x71\x81\xfa\xd0\xe9\xe1\x0e\xe6\x26\x30\x39\xb7\xb6\xa6\x1b\x77\x50\xd3\x9a\x62\x9a\x42\xad\x2a\x58\x32\x69\xc9\xb4\x9d\x6c\xc0\xed\x21\xa4\x4a\x08\xb5\x74\xee\x0e\xc6\x62\x69\xce\xfc\x32\x25\xda\xa0\xe1\x32\xd6\xee\x2a\x98\x68\xb1\x7e\xd0\x73\xf0\x32\xf9\x37\xb4\xc0\xa0\x31\x12\xe5\x2e\xf2\xe2\x5a\x55\x1a\xe2\x5c\x91\xe5\xc9\x6e\x65\x65\xc1\xb9\xa8\xf7\x31\xa3\xc0\x52\x8c\xd1\xb4\x80\x6e\x88\xae\x90\xfe\x18\x3f\xee\x77\x0b\xc7\x91\xe0\xfe\x90\x1b\xd4\xa9\xd2\x05\x8c\x49\xcd\x49\xe6\xbc\x18\xf6\x9a\x68\x1c\xb9\x29\x1b\x6b\xaf\xd4\x52\x0a\xc5\x12\x27\x48\xa1\x12\x9e\xd6\x4f\x34\x77\x34\x17\x6a\x1e\x15\xcc\x58\xd4\x7e\x24\xac\x19\x11\x87\xf5\x6f\x77\x13\xeb\xb3\xfe\xac\x24\x08\x7e\x87\xce\x96\x67\x8d\xb8\x6e\x36\x6c\xae\xd9\x12\x31\x52\xc2\xc3\xce\x27\xc3\x32\x6c\xf0\x26\x3f\x9e\x5c\xf4\xbd\xb9\x3a\xf7\xd9\xb9\xc3\xcc\x19\xde\xcf\xf1\x66\xf3\x61\x4d\x46\x54\xc0\x24\x4c\x6f\x0e\x1d\x38\x90\x7b\xf8\x2b\x26\x04\xea\xbc\xf7\xac\xf5\x0d\x2f\x65\xc1\xee\xb0\xff\x93\xb0\x6f\xa6\x37\x3f\x65\xf6\x4d\x5f\xeb\x70\xd3\xa0\xed\xe4\xb7\x4a\x03\xae\x18\x85\xe6\x61\x7b\xeb\x1b\x1b\x0c\xc2\x61\x38\x0a\x8f\x77\x57\x6f\x8a\x16\x34\x56\xf1\x33\x9b\x09\xad\x30\x1a\x5b\x97\x73\xa9\xb2\xd7\x08\xf7\xaf\xe0\x9c\xb5\x6f\xe1\x02\xf6\x9e\x13\xec\x1d\x85\x9c\x90\x2f\x49\x34\x1a\x03\xdb\x07\x8e\xa3\x52\xa3\xd3\xe8\xab\xaa\x1c\xb8\x90\xa9\x12\x66\x72\x34\xc0\xa5\xb1\xc8\x12\xf2\xe4\x44\x59\x43\xd1\x24\x94\xcc\xe8\x2f\x19\x73\x7a\x43\xf1\xbb\x60\x82\x27\xcf\x96\xbb\x3f\xec\x8f\xfa\x0f\xe4\xde\x19\x7d\x96\xdc\xa5\x60\x31\xe1\x4a\x81\x2d\xc4\x96\x1a\x53\xbe\x8a\x4c\x95\xa6\x7c\x05\x73\x4c\x95\xc6\x8d\x4b\x6a\xef\x44\xe9\x80\xa5\x16\x75\xf3\x4a\xeb\xf6\xc5\x4b\xaf\xb4\x46\x60\xe4\x35\x98\x1c\x3c\x43\x4d\x16\xfa\xe3\xfb\x3b\x9a\xf5\x99\x4c\x42\xd6\xf7\x42\x35\xca\x3f\x63\xee\x93\x4c\xf2\xbe\x12\x96\x97\x62\x9d\xcc\x9a\xa4\x61\xb0\x64\xda\x65\xd4\x79\xdd\x68\x4b\x47\xf4\xff\xbf\xce\xd7\x08\x4a\x5b\x9c\xf4\x4f\xfb\xbf\xf4\x5f\x3d\x72\xa1\xfb\x66\xec\xd3\xe4\x99\xab\x4e\xc2\xd3\xf0\x97\xf0\xd5\x8e\xfe\xf9\xf1\x64\x8b\x07\xac\x81\x43\x36\x29\x42\x12\x41\x6f\x59\x06\xcc\xab\xcc\x1c\xee\x50\x07\x47\x70\x88\x33\xf4\xef\xa4\x5a\xca\x75\x2a\x0f\x2c\xd3\x19\x12\x87\x81\xd9\xc7\xcb\xd9\xc7\x4f\x2e\x0d\xd0\x5e\x3b\x24\x05\x92\x4a\xd3\xac\xe9\x0d\xcc\x05\x8b\xef\x84\x67\x3e\xe4\x6d\xcb\x9c\x5b\x6c\x9e\x89\xcb\xd0\x69\xa5\x47\x76\x4c\xa0\x32\x34\xad\x4b\x25\xdb\x88\xc6\x25\x30\x10\x98\x71\x0b\xd3\x9b\xa0\x39\xc2\x01\x1b\xd7\x86\xe6\x11\xdb\xb0\xf0\x32\xce\x31\xbe\x3b\x70\x50\x6f\x55\x83\x7c\x7a\xce\x93\x04\x25\x28\x89\xb0\x5e\x19\x18\x8c\x95\x4c\xd6\x4b\x2b\x83\x07\x6b\xea\x40\xf8\xea\x2a\x30\xdc\xc9\x6e\x8e\x1f\xb9\x54\x39\xc7\x9c\x2d\xb8\xd2\x7b\x51\xb6\x96\x96\xad\x1e\x87\xd8\x81\xc7\x58\x67\xf7\x66\x68\xf8\x64\xd8\xa5\xa3\x36\x44\x0a\xf6\xe1\xaf\xdf\x79\x70\xfa\x3a\x1c\x9e\x1c\x77\x7f\x77\x61\x79\xc9\x89\x7f\x91\x09\x1b\x4e\x48\xdc\x0e\xf6\x01\xb4\x37\x69\x8e\x72\x03\xc1\xfd\xa6\x61\xf3\xf7\x1f\x45\xf2\x1f\x4b\x1c\x3c\x67\xf2\xde\x10\xfb\x27\x9c\xbc\xd7\x40\x6b\xb8\x22\x3e\x28\x54\xc6\x63\x72\x25\xee\xed\xdb\xb2\x61\x17\x89\xa6\xf1\xa8\x96\x90\x55\x7b\x09\x99\xa7\x1e\x3c\xa5\xe5\x1a\x61\x49\xff\x93\xaa\x75\x6c\xe3\x03\x81\x9b\xd6\x65\x9a\x10\x10\xcc\x58\x38\x01\x1f\x05\xe6\x10\xb8\x7d\x61\x5a\x27\x58\x07\x8f\x8b\xae\xe9\xcd\x9b\x35\xc5\x71\x84\x7b\xc9\x0d\xfa\x25\xb0\xbb\xa4\x09\x2b\x25\xb1\x23\x38\x95\x78\x90\x68\x3d\xee\xa3\x79\x98\x9d\xfa\x9b\x0e\xd7\xa4\x30\x97\xa6\x1a\xaf\xeb\xaf\xf3\x14\xd1\x7f\x9d\xa0\x76\x55\x10\xa1\x14\x13\xfc\x1e\x77\xc3\x03\x5e\x62\x98\x85\xcd\xea\xad\x7c\xf3\x7f\x5d\xe9\x56\x02\x6a\x0e\x3d\x08\x03\x57\x01\xf1\x02\x55\xd5\x64\xc9\x36\xbd\xb8\x5a\x0f\x59\x9c\x6f\x1e\xbf\x4b\xc1\x25\x7a\x5b\xc5\x39\x93\x59\x23\xac\xaf\xa2\xd7\xb7\xd1\x6e\xdf\x21\x4b\xd0\x21\x0b\x3c\x07\x59\x52\xa5\x69\x90\x8a\x72\xbd\x60\xc2\xbd\x79\x02\xd8\x2c\x9d\x1f\xf9\x9d\x77\xd7\x77\xb6\x37\x8e\x72\xd8\xdc\xf9\x12\xbf\x6b\x51\x68\x70\xd4\x81\xcb\xcb\xc1\x51\xab\xd0\x01\xa8\x96\x66\x9c\x14\xdd\xfb\x13\x28\xb8\xac\x2c\x9a\x83\xfd\x46\xa2\x0c\xd0\xeb\x92\x06\x26\x3d\x4a\x2a\x2f\x97\x39\x8f\x73\x3a\x7f\x7a\x33\x70\x2e\x50\x75\xd0\x68\x0e\x60\x8e\x81\x46\x5b\x69\x89\x09\x14\x2d\x1d\x20\x73\x76\xae\xd6\x25\xbb\x3d\xb8\xfd\x8f\x5a\xd7\x39\x2a\x0d\xca\xaa\xa0\x67\x77\xf0\x73\xf1\xfd\x71\x3c\x4f\x95\x1e\x1d\x19\x77\xc8\xd0\x6f\x3d\x18\xfe\x12\x1e\x85\x47\xe1\x60\x77\xe3\xc0\x41\x7b\x0b\xea\x1d\x49\xdf\x01\x75\x1f\xdf\x76\xa9\xbc\x89\x0e\xd7\x28\x4f\xcb\x83\x87\xcb\xdb\xe3\xba\x0d\x94\x06\x49\xa4\x62\xd4\xdd\xf5\xba\x26\xbe\xb8\xb8\x78\x50\xc4\xcc\x94\x03\x5f\xa8\xca\xc7\x52\xbd\x92\xa2\xee\x2a\x98\xc5\x69\x8b\xa6\xcf\x8b\x05\x5e\xf6\x17\xa7\x4f\x28\x67\x2e\x95\x50\xd2\x40\x51\x19\x4b\x44\x51\xa3\x63\xd3\x89\xcf\xf2\x02\xed\x9a\x1e\xc7\x6d\xd9\x06\x17\x06\x98\x58\xb2\xda\x1c\x82\x66\x32\x51\x45\xe0\x51\x65\x13\xb1\x1a\xe2\x59\x19\x7c\x46\x89\x70\x71\x71\x01\x9b\x00\xe5\x95\x18\xc4\xc3\x38\x1e\xed\xc2\x51\xf0\xd4\x89\x2e\x23\x6d\x1a\x12\x06\x67\xc3\xb3\xb3\xd1\x43\xf2\x78\xf9\xe1\xe2\xfd\xef\xa6\xbb\xa9\xdf\xea\x16\x98\x0e\xa1\x92\x25\xd3\xc6\x35\x2b\x9a\x5d\x9a\x76\x4d\xac\xa4\xe1\x09\x6a\x4c\x28\x5b\xf9\x1d\x9e\xa6\xb0\x13\xbc\x71\x79\xaa\xbb\x77\xf2\xed\xbe\x37\x2e\x27\x4a\x60\x82\x33\xdf\x57\xdb\x98\x14\x06\x61\x18\x3e\xcc\xb0\x8a\xe6\xc5\x1b\x1c\xce\x2a\xba\x17\xe6\x45\x3d\x24\x6d\xda\xfb\x25\xb0\xee\x92\x8f\xb7\xee\x73\xb9\x8c\xdf\xe3\x71\xa5\x1e\x7f\xff\x5c\xd5\xf2\xe3\xc9\x47\xd7\xf9\x6a\xeb\xff\xba\x44\xb3\xd9\x29\x20\x58\xf3\xe0\x3c\x47\xbb\x44\x94\x8f\xa5\xd8\x87\x59\xd5\x00\x0b\xba\xeb\xf6\xfb\x53\xae\xa7\x17\x1d\xb4\xba\xae\xa6\xac\xbb\x22\xa0\x21\x1b\xe1\x53\x0d\x36\xfb\x32\xf3\x26\x9b\x0b\x96\xd3\x7f\x3b\x96\x7a\x30\x0c\x09\xfa\xb6\x2e\x27\x8e\x4a\x88\xf3\xd3\xf7\x4a\xd9\x37\xed\x44\xff\xf4\xd0\x4a\xef\x70\x05\x28\x63\xb5\x55\x10\xb5\x4c\xc4\xbd\xc0\x75\x71\x24\xad\x21\x65\xba\xae\x0a\x97\x90\xa3\x8f\x6b\x72\x14\xd6\x20\x73\x8e\xab\x1d\x47\x81\xcd\x42\x7a\xd3\xc4\xcf\xf5\x20\xda\x7a\x34\x18\xe2\x68\x38\xc4\xd1\x68\x88\xa3\x5d\x1e\xfa\x83\x09\x4f\x28\x91\xf3\xe3\xc9\x07\x65\x5d\xc7\x91\xea\xbe\xd9\xec\x7a\xed\x34\xb7\xaa\xf0\xed\x52\xd4\xc4\x15\xe5\x0b\xdb\xb5\x9a\x72\x26\x13\x81\xae\xd7\x4d\x6b\x1c\x4c\xba\x7e\xf4\x55\xc3\x5c\x68\x90\x1b\x18\x04\xe4\x17\xbd\xa6\xe7\xda\x6b\x62\xce\x77\x81\x8f\x9c\xcf\x38\xf6\x68\x1e\x6b\x4b\x36\x9c\x68\x36\xbb\xde\x8c\x4c\x83\xb6\xdf\xe4\xd4\x39\x6a\x87\xe6\xd6\xb6\x5d\xb4\x80\xc9\xda\xf3\x15\x2e\x77\x99\xdf\x3a\x13\x5d\xab\x0c\x16\x1c\x97\x9b\x4e\xd0\xb0\x6f\x77\xe1\x42\x34\x75\x70\x43\x99\xa9\x30\xad\xe6\x82\xc7\x21\xcc\xdc\xe6\xae\x35\xbd\x55\xe1\xa1\x4c\x4a\xc5\xa5\x7d\x0a\x37\xdf\xdf\x64\x26\x06\xde\x9b\x3c\x18\x1a\x47\x6c\x02\xff\xf3\x5f\xff\xed\x1a\xf0\xc6\xf3\xf4\xc1\xd1\x51\xd0\x0a\xb7\xa6\xe2\xdb\x4b\x55\xe6\x56\x31\x09\x5c\xa6\x5c\x72\x4b\xea\x31\x57\xd5\x97\x2c\x6b\x0a\xd7\xa6\x07\x4e\x8a\x07\x4d\x93\xe4\xd0\x77\x2c\xbd\xad\x2d\xe3\x02\xfa\x69\x97\xeb\xa6\x14\x15\x89\xab\xce\x69\x0f\x82\x80\x4a\x4a\xd2\xbf\x41\xcd\x4a\x0b\xd8\x95\x63\x83\x9f\x33\xb0\xa8\x0b\x2e\x99\x80\x65\xce\x05\x5d\x0f\x09\xe4\x1a\xbf\xb8\x2a\x51\xf3\xa2\xf9\xba\xd0\x2a\xb5\xd5\x9a\xdd\xdc\xf5\xd7\x4c\x63\x79\x4e\x8e\xa0\x31\xc3\x55\x49\x8e\xd0\x9b\xec\x9f\xb5\xe6\xae\xeb\xb9\x5d\x28\xb0\x49\x40\x86\x32\x54\x1b\x50\xc4\xcc\xd5\x02\x0f\x61\x5e\x59\x30\xb9\x5a\x7a\xfe\x51\x30\x1b\x37\xd4\x56\xa2\xd9\x2a\x64\xf2\xe1\xe4\x52\x49\xcb\x62\x6b\x9a\x4e\xff\xdb\x8b\x3f\xba\xcf\x44\x8d\x47\xe7\x6c\x81\x0e\x20\xdd\x9d\x71\xe2\x18\x4a\x83\xa9\xb2\xac\x7d\xe4\x92\xd8\x6f\x72\x08\x29\xa2\x80\x54\x23\x95\xde\x41\xec\x77\x86\x02\x61\xc1\xd9\xf6\xd7\x09\x73\x16\x45\x36\x2c\xd0\x75\xa8\xb1\xe0\xa2\x37\xf9\x5b\xfb\xd3\x39\x8d\x92\x30\x43\x81\x99\x66\x45\x40\x7c\xfb\xc1\xe2\x25\x27\x42\xe3\xba\xdc\xb4\xe8\x3f\x05\x6a\x89\xba\x37\xf9\xdb\xc6\x53\xb3\x53\x30\x6b\x26\x77\x31\x34\xf5\x1f\xc4\xfc\xc7\x1f\x27\xef\x6e\x12\x70\x3e\xf2\xeb\x1a\x50\x2a\xbd\x11\x82\xbf\x55\x16\x96\xee\xc3\x5a\x0a\x53\xc7\xe5\xb8\x6d\x6b\x51\xd7\xbc\xe4\x42\x60\xc6\x04\xb0\x64\x81\xd2\x95\xc0\x4a\xc3\xd5\x95\xba\xa5\x89\xfe\xab\x54\x90\x57\x19\x02\x2b\x54\x25\x5d\x1b\xcb\x6a\x96\xa6\x3c\xfe\x75\x33\xa6\x8d\x0f\x56\xb6\x4c\x2b\x01\x3c\x41\x66\xc0\x57\x0c\xd3\x06\xd4\xc8\xdb\x37\xb4\x7a\xb1\xa0\x24\xc7\x92\xf5\x57\x14\x42\x2b\x77\x7f\xb1\x92\xb1\xa8\x92\xb6\x14\xa9\x55\xf5\x82\x76\x06\xa9\xd4\xbc\xed\x5f\xb9\x4e\x52\xce\xad\xe5\x68\x2c\x94\x5a\x91\xf5\x01\x17\xce\x72\x1d\xb2\x6a\x5d\x37\x47\x46\x73\x95\xd4\x93\xb1\xfb\x37\x04\x93\xe0\x7f\x03\x00\x00\xff\xff\x7d\x4e\x7b\xdb\x27\x21\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/index.html"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
